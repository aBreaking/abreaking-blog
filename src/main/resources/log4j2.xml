<?xml version="1.0" encoding="UTF-8"?>
<!-- 该xml配置中,xml元素大小写不敏感 -->
<!-- status="off",log4j2把自身事件记录到控制台的配置，off表示不记录，其余的记录有trace，debug，info，warn，error，fatal -->
<!-- monitorInterval表示检测更改配置的时间,单位是秒,最小间隔为5秒,0或负数表示不检测 -->
<configuration name="test-cfg" status="off" monitorInterval="0">

    <!-- 常量引用 -->
    <properties>
        <!--<property name="LOG_HOME">/opt/logs/api-logs/</property>-->
        <property name="LOG_HOME">./logs</property>
        <property name="FORMAT">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n</property>
        <property name="LOGGER_FILE_DATE_PATTERN">%d{yyyy-MM}</property>
        <property name="LEVEL">INFO</property>
    </properties>

    <!-- appender用于接收各种日志 -->
    <appenders>
        <!-- 常见的输出到console,常用于开发环境中,默认是system_err,还有一个system_out -->
        <console name="console" target="system_out">
            <!-- appender级别的日志过滤 -->
            <!-- <thresholdFilter level="info" onMatch="accept" onMismatch="deny"/> -->
            <patternLayout pattern="${FORMAT}"/>
        </console>
        <file name="db_log" fileName="${LOG_HOME}/blog-db.log" append="true">
            <patternLayout pattern="${FORMAT}"/>
        </file>

        <RollingFile name="service_log" fileName="${LOG_HOME}/blog-info.log"
                     filePattern="${LOG_HOME}/logback/blog-info.${LOGGER_FILE_DATE_PATTERN}.log"
                     append="true">
            <!-- 输出格式 -->
            <PatternLayout  pattern="${FORMAT}" />
            <!-- 设置策略 -->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT"  onMismatch="DENY" />
            </Filters>
        </RollingFile>

        <RollingFile name="visitor_log" fileName="${LOG_HOME}/blog-visitor.log"
                     filePattern="${LOG_HOME}/logback/blog-visitor.${LOGGER_FILE_DATE_PATTERN}.log"
                     append="true">
            <!-- 输出格式 -->
            <PatternLayout    pattern="${FORMAT}" />
            <!-- 设置策略 -->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT"  onMismatch="DENY" />
            </Filters>
        </RollingFile>

    </appenders>


    <!-- 接收appender -->
    <loggers>
        <logger name="org.apache.http" level="warn"/>
        <!-- Spring -->
        <logger name="org.springframework" level="WARN"/>
        <!-- mybatis loggers -->
        <logger name="com.ibatis" level="DEBUG"/>
        <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
        <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
        <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
        <!-- sql loggers -->
        <logger name="java.sql.Connection" level="DEBUG" additivity="true"/>
        <logger name="java.sql.Statement" level="DEBUG" additivity="true"/>
        <logger name="java.sql.PreparedStatement" level="=debug,stdout" additivity="true"/>
        <logger name="java.sql.ResultSet" level="DEBUG" additivity="true"/>
        <logger name="org.apache" level="WARN"/>

        <!-- 对包进行更详细的配置 -->
        <!-- additivity表示是否追加,防止重复,因为root已经接收过一次了 -->
        <logger name="com.abreaking.blog.dao" level="${LEVEL}" additivity="true">
            <appender-ref ref="db_log"/>
        </logger>

        <logger name="com.abreaking.blog.interceptor" level="${LEVEL}" additivity="true">
            <appender-ref ref="visitor_log"/>
        </logger>
        <!-- root logger,一般用于放置所有的appender -->
        <root level="${LEVEL}">
            <appender-ref ref="service_log"/>
            <appender-ref ref="console"/>
        </root>
    </loggers>

</configuration>